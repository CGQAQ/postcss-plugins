"use strict";var n,e,t=require("postcss-value-parser");!function(n){n.Block="block",n.Inline="inline"}(n||(n={})),function(n){n.Start="start",n.End="end"}(e||(e={}));const o={BlockStart:`${n.Block}-${e.Start}`,BlockEnd:`${n.Block}-${e.End}`,InlineStart:`${n.Inline}-${e.Start}`,InlineEnd:`${n.Inline}-${e.End}`};var r,i;function hasKeyframesAtRuleAncestor(n){let e=n.parent;for(;e;)if("atrule"===e.type){if("keyframes"===n.parent.name.toLowerCase())return!0;e=e.parent}else e=e.parent;return!1}function cloneDeclaration(n,e,t){return n.cloneBefore({value:e,prop:t})}function transformSide(n,e){return t=>(cloneDeclaration(t,t.value,`${n}-${e}`),!0)}function transformSideShorthand(n,e){return o=>{const r=t(o.value).nodes.filter((n=>"space"!==n.type));if(r.length>2){const n=`[postcss-logical] Invalid number of values for ${o.prop}. Found ${r.length} values, expected 1 or 2.`;throw new Error(n)}const[i,a]=e;let l,c;return 1===r.length&&(l=r[0].value,c=r[0].value),2===r.length&&(l=r[0].value,c=r[1].value),cloneDeclaration(o,l,`${n}-${i}`),cloneDeclaration(o,c,`${n}-${a}`),!0}}function logicalToPhysical(n,e){const[t,r]=e.block,[i,a]=e.inline;switch(n){case o.BlockStart:return t;case o.BlockEnd:return r;case o.InlineStart:return i;case o.InlineEnd:return a}}function transformValueWithSingleDirection(e,r){return i=>{const{prop:a,value:l}=i,c=t(l);let s=[];return s=e===n.Block?[o.BlockStart,o.BlockEnd]:[o.InlineStart,o.InlineEnd],c.nodes.forEach((n=>{const e=n.value.toLowerCase();return"word"===n.type&&s.includes(e)&&(n.value=logicalToPhysical(e,r)),n})),c.toString()!==l&&(i.cloneBefore({prop:a,value:c.toString()}),!0)}}function directionFlowToAxes(n){switch(n){case r.TopToBottom:return[i.Top,i.Bottom];case r.BottomToTop:return[i.Bottom,i.Top];case r.RightToLeft:return[i.Right,i.Left];case r.LeftToRight:return[i.Left,i.Right]}}!function(n){n.TopToBottom="top-to-bottom",n.BottomToTop="bottom-to-top",n.RightToLeft="right-to-left",n.LeftToRight="left-to-right"}(r||(r={})),function(n){n.Top="top",n.Right="right",n.Bottom="bottom",n.Left="left"}(i||(i={}));const creator=e=>{const a=Object.assign({preserve:!1,blockDirection:r.TopToBottom,inlineDirection:r.LeftToRight},e),l=Object.values(r);if(!l.includes(a.blockDirection))throw new Error(`[postcss-logical] "blockDirection" must be one of ${l.join(", ")}`);if(!l.includes(a.inlineDirection))throw new Error(`[postcss-logical] "inlineDirection" must be one of ${l.join(", ")}`);const[c,s]=directionFlowToAxes(a.blockDirection),[d,u]=directionFlowToAxes(a.inlineDirection);if(!Object.values(i).every((n=>[c,s,d,u].includes(n))))throw new Error('[postcss-logical] "blockDirection" and "inlineDirection" must be on separate axes');const f={block:[c,s],inline:[d,u],inlineIsHorizontal:[r.LeftToRight,r.RightToLeft].includes(a.inlineDirection)},makeTransform=n=>(e,{result:t})=>{if(!n||hasKeyframesAtRuleAncestor(e))return;const o=e.parent;let r=!1;try{r=n(e)}catch(n){e.warn(t,n.message)}r&&(a.preserve||e.remove(),o.nodes.length||o.remove())};return{postcssPlugin:"postcss-logical",Declaration:{"caption-side":makeTransform((g=f,n=>{const{prop:e,value:r}=n,i=t(r),a=Object.values(o);return i.nodes.forEach((n=>{const e=n.value.toLowerCase();return"word"===n.type&&a.includes(e)&&(n.value=logicalToPhysical(e,g)),n})),i.toString()!==r&&(n.cloneBefore({prop:e,value:i.toString()}),!0)})),float:makeTransform(f.inlineIsHorizontal?transformValueWithSingleDirection(n.Inline,f):null),clear:makeTransform(f.inlineIsHorizontal?transformValueWithSingleDirection(n.Inline,f):null),"margin-block-start":makeTransform(transformSide("margin",c)),"margin-block-end":makeTransform(transformSide("margin",s)),"margin-inline-start":makeTransform(transformSide("margin",d)),"margin-inline-end":makeTransform(transformSide("margin",u)),"margin-block":makeTransform(transformSideShorthand("margin",[c,s])),"margin-inline":makeTransform(transformSideShorthand("margin",[d,u])),"padding-block-start":makeTransform(transformSide("padding",c)),"padding-block-end":makeTransform(transformSide("padding",s)),"padding-inline-start":makeTransform(transformSide("padding",d)),"padding-inline-end":makeTransform(transformSide("padding",u)),"padding-block":makeTransform(transformSideShorthand("padding",[c,s])),"padding-inline":makeTransform(transformSideShorthand("padding",[d,u]))}};var g};creator.postcss=!0,module.exports=creator;
